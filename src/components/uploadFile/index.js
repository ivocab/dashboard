import React, { useEffect, useState } from "react";
import { FileUploader } from "react-drag-drop-files";
import { useDispatch, useSelector } from "react-redux";
import { uploadService } from "../../services/uploadService";
import { checkIcon } from "../icons";
import st from "./uploadFile.module.scss";

export default function UploadFile({ defFile, title, type, setValue }) {
	const [file, setFile] = useState([]),
		[loading, setLoading] = useState(false),
		dispatch = useDispatch(),
		fileIcon = (
			<svg
				width="15"
				height="20"
				viewBox="0 0 29 38"
				fill="none"
				xmlns="http://www.w3.org/2000/svg">
				<path
					d="M11.7125 0.235399C11.882 0.0855115 12.1024 0.001864 12.3314 0.000535937C12.3804 -0.0017578 12.4295 0.00332044 12.4769 0.0155913H26.774C27.3114 0.0203412 27.8253 0.231356 28.2037 0.602749C28.3927 0.785855 28.5426 1.00361 28.6446 1.24343C28.7465 1.48324 28.7986 1.74035 28.7979 1.99988V35.0313C28.797 35.5549 28.5829 36.0569 28.2024 36.4271C27.8218 36.7974 27.3059 37.0058 26.7678 37.0066H2.86195C2.3238 37.0058 1.80792 36.7974 1.42739 36.4271C1.04685 36.0569 0.832711 35.5549 0.831892 35.0313V11.545C0.810227 11.4684 0.798786 11.3895 0.797852 11.3101C0.801137 11.1834 0.830173 11.0585 0.883286 10.9428C0.936399 10.827 1.01254 10.7226 1.10731 10.6356L11.598 0.301643C11.6223 0.277715 11.6493 0.256506 11.6785 0.23841L11.7125 0.235399ZM26.9937 1.99386C26.9971 1.96676 26.9928 1.93927 26.9814 1.91434C26.9699 1.88941 26.9517 1.86798 26.9287 1.85234C26.8931 1.81537 26.8445 1.7928 26.7925 1.78911H13.2444V9.52153C13.2452 9.87407 13.1744 10.2233 13.0361 10.5492C12.8979 10.875 12.6948 11.1711 12.4386 11.4204C12.1824 11.6697 11.8781 11.8672 11.5432 12.0018C11.2083 12.1363 10.8494 12.2052 10.4871 12.2044H2.68556V35.0253C2.68409 35.0519 2.68891 35.0785 2.69963 35.103C2.71036 35.1275 2.72672 35.1494 2.74745 35.1668C2.78574 35.2053 2.83785 35.228 2.8929 35.23H26.7925C26.8202 35.2311 26.8476 35.2259 26.8729 35.215C26.8981 35.204 26.9204 35.1875 26.938 35.1668C26.9766 35.1289 26.9997 35.0786 27.003 35.0253V1.99386H26.9937ZM7.80714 30.5177C7.59046 30.5177 7.38266 30.434 7.22945 30.2849C7.07623 30.1358 6.99016 29.9336 6.99016 29.7228C6.99016 29.512 7.07623 29.3098 7.22945 29.1607C7.38266 29.0116 7.59046 28.9279 7.80714 28.9279H16.472C16.6887 28.9279 16.8965 29.0116 17.0497 29.1607C17.2029 29.3098 17.289 29.512 17.289 29.7228C17.289 29.9336 17.2029 30.1358 17.0497 30.2849C16.8965 30.434 16.6887 30.5177 16.472 30.5177H7.80714ZM7.80714 25.1731C7.59046 25.1731 7.38266 25.0893 7.22945 24.9402C7.07623 24.7912 6.99016 24.589 6.99016 24.3781C6.99016 24.1673 7.07623 23.9651 7.22945 23.816C7.38266 23.667 7.59046 23.5832 7.80714 23.5832H21.0551C21.2718 23.5832 21.4796 23.667 21.6328 23.816C21.786 23.9651 21.8721 24.1673 21.8721 24.3781C21.8721 24.589 21.786 24.7912 21.6328 24.9402C21.4796 25.0893 21.2718 25.1731 21.0551 25.1731H7.80714ZM7.80714 19.8254C7.59046 19.8254 7.38266 19.7417 7.22945 19.5926C7.07623 19.4435 6.99016 19.2413 6.99016 19.0305C6.99016 18.8197 7.07623 18.6175 7.22945 18.4684C7.38266 18.3193 7.59046 18.2356 7.80714 18.2356H23.079C23.2957 18.2356 23.5035 18.3193 23.6567 18.4684C23.8099 18.6175 23.896 18.8197 23.896 19.0305C23.896 19.2413 23.8099 19.4435 23.6567 19.5926C23.5035 19.7417 23.2957 19.8254 23.079 19.8254H7.80714ZM11.4278 9.52153V3.04472L3.9265 10.4309H10.4871C10.7332 10.4264 10.9686 10.3318 11.1462 10.1659C11.3213 9.99456 11.4202 9.76315 11.4216 9.52153H11.4278Z"
					fill="#29A0E3"
				/>
			</svg>
		),
		musicIcon = (
			<svg
				xmlns="http://www.w3.org/2000/svg"
				enable-background="new 0 0 512 512"
				height="512px"
				id="Layer_1"
				version="1.1"
				viewBox="0 0 512 512"
				width="512px">
				<path d="M136.561,335.548c4.141-0.112,7.918-1.03,11.397-2.514c25.751,38.749,70.241,63.85,120.067,62.525  c14.728-0.389,35.057-9.092,48.321-48.326c8.41-24.828,12.519-57.835,11.579-92.945c-1.846-69.473-23.382-139.052-67.317-137.884  c-49.848,1.329-92.94,28.76-116.588,68.822c-3.543-1.296-7.363-2.011-11.515-1.905c-49.431,1.318-88.735,36.534-87.615,78.5  C46.001,303.789,87.13,336.865,136.561,335.548z M150.156,219.648c2.508-7.827,5.773-15.319,9.754-22.368  c20.031-35.478,57.617-59.921,101.222-61.08c24.566-0.651,45.205,51.454,46.998,118.616c0.864,32.362-2.978,63.731-10.544,86.072  c-4.332,12.838-14.022,34.443-30.083,34.87c-43.595,1.158-82.439-21.248-104.327-55.604c-4.365-6.862-8.046-14.21-10.96-21.937  c-4.61-12.182-7.31-25.313-7.684-39.047C144.17,245.388,146.187,232.091,150.156,219.648z M64.687,261.294  c-0.832-31.049,29.828-57.146,68.353-58.176c0.672-0.011,1.345,0.075,2.006,0.187c-7.107,17.379-10.832,36.449-10.309,56.394  c0.534,19.925,5.261,38.771,13.286,55.733c-0.651,0.144-1.302,0.299-1.996,0.32C97.524,316.776,65.509,292.348,64.687,261.294z" />
				<path d="M355.609,314.305l15.9,11.809c53.978-72.685-3.223-145.049-3.81-145.77L352.3,192.793  C352.791,193.396,400.536,253.803,355.609,314.305z" />
				<path d="M415.189,353.332l15.9,11.813c84.019-113.13-5.058-225.818-5.965-226.944l-15.399,12.449  C410.535,151.658,490.157,252.383,415.189,353.332z" />
			</svg>
		);

	useEffect(() => {
		if (defFile) setValue(defFile._id);
	}, []);

	const handleChange = (file) => {
		setLoading(true);
		setFile(file);

		const data = new FormData();

		data.append("file", file[0]);

		uploadService
			.upload(data)
			.then((res) => {
				setLoading(false);
				setValue(res.data.data._id);
			})
			.catch((e) => console.log(e));
	};

	return (
		<div className={st.uploadFile}>
			<FileUploader
				handleChange={handleChange}
				label=""
				name="file"
				multiple
				types={type === "music" ? ["mp3"] : ["png", "jpeg", "jpg", "web"]}>
				<div className={st.uploadFile__item}>
					<span className={st.uploadFile__item__span}>
						<svg
							xmlns="http://www.w3.org/2000/svg"
							width="31"
							height="21"
							viewBox="0 0 31 21"
							fill="none">
							<path
								d="M24.9 8.75C25.075 8.225 25.25 7.7 25.25 7C25.25 3.15 22.1 0 18.25 0C15.625 0 13.175 1.575 12.125 3.85C11.6 3.675 10.9 3.5 10.375 3.5C7.925 3.5 6 5.425 6 7.875C6 8.225 6 8.575 6.175 8.75C3.025 9.275 0.75 11.725 0.75 14.875C0.75 18.2 3.55 21 6.875 21H13V15.75H7.75L15.625 7.875L23.5 15.75H18.25V21H24.375C27.7 21 30.5 18.2 30.5 14.875C30.5 11.725 28.05 9.1 24.9 8.75Z"
								fill="#07D792"
							/>
						</svg>
					</span>
					{defFile && ![...file]?.length ? (
						<div className={`${st.uploadFile__item__files} df_alc_jcb`}>
							<span>{type === "music" ? musicIcon : fileIcon}</span>
							<p>
								{defFile.key.slice(0, 4)}..{defFile.key.slice(-4)}
							</p>
						</div>
					) : null}
					{[...file]?.length ? (
						<div>
							{/* {defFile.map((item, i) => (
								<div key={i} className={`${st.uploadFile__item__files} df_alc_jcb`}>
									<span>{type === "music" ? musicIcon : fileIcon}</span>
									<p>{item?.name?.slice(0, 20)}</p>
									<span>{checkIcon}</span>
								</div>
							))} */}
							{[...file].map((item, i) => (
								<div key={i} className={`${st.uploadFile__item__files} df_alc_jcb`}>
									<span>{type === "music" ? musicIcon : fileIcon}</span>
									<p>
										{item.name.slice(0, 4)}..{item.name.slice(-4)}
									</p>{" "}
									{loading ? (
										<span>
											<div
												className="spinner-border text-primary ms-2"
												style={{ width: "15px", height: "15px" }}
												role="status">
												<span className="sr-only"></span>
											</div>
										</span>
									) : null}
								</div>
							))}
						</div>
					) : (
						<p>{title}</p>
					)}
				</div>
			</FileUploader>
		</div>
	);
}
